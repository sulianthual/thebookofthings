
# The Book of Things
# Game by sul
# Started Sept 2020
#
# ideas.txt: random note and ideas
#           this file not loaded
#
##########################################################
###########################################################

Ideas for game:

* Main Guidelines:
Keep it simple or will never finish this game !!!:
No more advanced physics! Only simple goofy minigames
No more advanced drawings! Only simple and goofy.
No more advanced modular story! Only one linear story.


* Game Progression:
- Each chapter, the story is modified in some way.
- This has to do with the book of things doing/eating/drinking certain things?
  or a warp to another dimension?
Chapter 1: start story with the hero
Chapter 2: add the partner
Chapter 3: add the villain
Chapter 4: twist story, hero-partners hate each others, hero fights both
           lies at the end
Chapter 5: twist story, hero fights his problems instead (on high peak)
Chapter 6: treasure hunt. Go south to islands and pirate theme.
           cooperate with partner, villain and elder as a team.
           then steal the treasure from everyone at the end!
           => From chapter 4 to 6, we learn to lie, cheat and steal!

Chapter X: Vegas Baby!
           lie,cheat and steal! ready for Vegas
           go spend all the fortune from pirates
           can draw eiffel tower, the sphinx and many fun stuff
Chapter 7: the fabric of reality

           go west to space launch.
          go in space, end up in black hole
          then every story element is scrambled (hero has fish head, etc, etc...)

Final Chapter: Free Roaming
   - just the complete story and can choose morning mini-game, afternoon quest ?
   - or just free-roaming: can go anywhere on open world and access all minigames


* General Story Arc:
Each day of the story follows somewhat an arc (even if varying in content):
arc:     wake up -> morning game -> travel1 -> afternoon quest (game) -> travel2 -> aftermath -> ending
phases:      *          morning             |         afternoon        |        evening       *
tension level: 0           2           1             3                     1            2          0
morning games: morning breakfast, fishing, hunting.... (little consequence except for later)
overcome games: defeat villain (gunfight, stomp fight...)
aftermath games: eat diner, serenade/kiss...(happy ending or not)
travel1: home to evil lair, or other (pirate island, iceberg?? space station??,timemachine)
travel2: X back home, or to some location for an ending


* Possible Story twists:
- change point of view (hero, partner,villain,fish, hero in the future,...)
- new setting like tropical island and treasure hunt (palm tree, ship, shark fins, cannon fight, islands...)(eyelid on everyone)
- medieval setting with a fight for the partner=princess
- space setting (villain is the father?) (space elment on everyone)
- the hero is an anti-hero
- parodie (they are "playing" their adventure)
- partner rescues the hero
- the hero is evil, the villain is good, the partner is evil
- the fish becomes a river spirit (is huge)
- they are all super-heroes
- the fabric of reality: break everything, swapping images randomly


* World Map:
- Villain in East
- Introduce 3 new characters in North/West/South:
The elder in north highest peak... (gives advice)
The pirate (or the sailor) in south ocean
The randobot in west ... (randomizes the story)
Later on: Make unique minigame travel where can roam unique map (add tons of content from drawings +roads)
=> Is this a good idea? We should only keep the hero, partner and villain!

* Todo:
- add a mailbox and the hero reads mail after morning mini-game? (this could start quests)
  (villain says: I have captured the partner... have problems? come solve them at the highest peak)
-cleanup chapter 4: no littering ,etc...
- add flavors to characters:
   the hero was "always angry", "dumb as a rock", etc...
    then it may just affect the story text with options, but still add a lot of depth to the story
- lie, cheat and steal:
  chapt 4 we can have the hero lie (then betray the partner by killing the villain and enslaving her)
  chapt 5 the hero learn to cheat with the elder
  chapt 6 the hero learns to steal the treasure
  Remember to lie, cheat and steal becomes the game's memo!
- add a mirror: in villain chapter? in hero's house?
  easy to make a character reflection in the mirror
- name stuff: like locations (the evil lair, home, the highest peak, etc...)


Mini Game Ideas
Hunt = Arrow Parabolic Arc [A][D] then [W]
Situation? = Flappy Bird [W]
Fight = Play Pong [W][S]
stomping game [A][D]+[W]. Just jump on each other
Fight = Mash [A][D]
Fight = Rock Paper Scissors (choose quickly on beat [A][W][D])
Mario level= move [A][D] and jump [W]
avoid falling boulders=[A][D]
space invaders=[A][D]
Kissing=[S] at right time for Hero/Princess moving opposite up down on left/right side of screen
Basketball=jump and shoot Holding [S] in moving hoop laterally
Bait=guide monster to trap [WASD]. It charges straigth
Shooter=Cannon on fast rotating wheel, shoot stuff with [W]
Indiana jones ball behind=[A][D] to avoid obstacles
breakout game (pad, ball and horizontal layers of bricks)
rock paper scissors (like alex kid). Countdown 3-2-1, can see villain choice that is random except on 1
helicopters for hero/villain with flappy bird and shooting
writing game: type quickly text or answer to it. What is your favorite color? ...etc...
jump/duck. Simple for bullets (increase rythm)
simple dinosaur game from google. just jump in time.
skiing game like classic game
Atari games: https://games.aarp.org/category/atari-games

Stuff to Draw: (check all objects in katamari damacy)

alarmclock and desk (just add to morning scenes in bedroom)

Nature:
- iceberg tree mountain
- palm tree
- cloud rain
- flower

Animals:
- Bird  Bird Nest Egg Duck Chicken
- Cat Dog Snail Wolf Bear
- dolphin whale shark turtle
-octopus
- snake frog
- mushroom
- mosquito fly spider spider web
- penguin

Food:
- drink coffeecup
- fried egg
- apple banana
- cake
- grape strawberry
- fork spoon knife plate


Clothes:
- hat cap pants sock sweathshirt
- sunglasses

House:
- Bed pillow alarmclock
- Chair
- telephone
- hammer
- Tv
- teapot
- mailbox

Technology:
- money bill (do a shower of bills for rich!)
- Bicycle Wings
- Tent Submarine
- trumpet
- windmill
 -tennis raquet


Culture:
- Ghost Vampire God



#####################################################################
# COMPLETE LIST KATAMARI DAMACY OF STUFF FOR IDEAS TO DRAW


Dustpan - Dish Rag - Quail Chick - Chick - Duckling - Swan - Hairbrush - Hair Dryer - Kokeshi Doll - Big Kokeshi - Fried Shrimp - New Year's Cards - Home Mailbox - Film - PET Bottle - Oden - Toast - Bread Loaf - Noh Mask - Red Oni Mask - Police ID - Shuriken - Tuna Sushi - Squid Sushi - Toro Sushi - Egg Sushi - Octopus Sushi - Shrimp Sushi - Inkstone - Horsetail - Police Club - Watercolor - Dynamometer - Maple Leaf - Ginkgo - Takoyaki Hotplate - Fishing Lure - Binoculars - Windmill - Barn - Picnic Table - Straw - Carport - Local Police Sign - Town Map - Street Stall - "You Are Here" - Corner Store - Drink Crate - Gong - Pampas Grass - Rice Container - Vase - Girl's Backpack - Boy's Backpack - Bulldog - Rat - Dung Beetle - Big Dung Beetle - Giant Dung Beetle - Toy Dog - Insect Cage - Butterfly Specimens - Poisonous Frog - Gold Medal - Deer Scare - Garden Rock - Police Bike - Cream Puff - Medium Tree - Kiddie Spade - Kiddie Rake - Kiddie Bucket - Small Takoyaki - Takoyaki - Big Takoyaki - Girl's Graffiti - Boy's Graffiti - Handcuffs - New Year's Card - Postcard - Envelope - Water Pump Ad - Fire Hazard Sign - Appliance Billboard - Cream Puff Ad - Sushi Ad - No Parking! - Manhole Cover - Toy Capsule - Toy Capsule - Toy Capsule - Green Crayon - Blue Crayon - Purple Crayon - Crayon Box - Banana - Survey Marker - Rock - Black Rock - Big Rock - Swallowtail - White Butterfly - Yellow Swallowtail - Purple Butterfly - Ice Cube Tray - Arrow - Orange Juice - Giraffe Slide - Girly Cellphone - Persimmon - Blackboard Eraser - Chalk - Red Chalk - Fireworks - Blue Chalk - Yellow Chalk - Green Chalk - Pigeon - Old Magazines - Kanji Workbook - Telephone Pole - 10 Yen Coin - Toothbrush - Toothpaste - Chocolate - Chocolate - Fiddler Crab - Blue Crab - Pink Flower - White Flower - Yellow Flower - Concrete Cover - Iron Cover - Steel Cover - Wall (Short) - Kiddie Pylon - Ethnic Mask - Water Tank - Nakata Residence - Kido Residence - Motoki Residence - Yamada Residence - Hayashi Residence - "Over 45cm" Sign - Sand Castle - Tin Crown - Crown - Jungle - Coffee Milk - Strawberry Jam - New Driver Sign - Senior Driver Sign - Baseball - Striped T-Shirt - Cardboard Box - Pylon - Yellow Paint - Paintbrush - Red Paint - Paintbrush - Cherry Tree - Ruby Ring - Welcome Mat - Barber's Pole - Lottery - Shopping Basket - Shopping Cart - Daikon Radishes - Chinese Cabbages - Magazine Rack - Cabbage - Barbershop - Squash - Bookstore - Drugstore - Ramen Shop - Panda Mascot - Pansies - Cake Shop - Cake Shop Sign - Lotto Store - Lottery Sign - Shop. Center Arch - Paper Lantern - Shabu-Shabu Pot - Barbershop Sign - Bookstore Sign - Drugstore Sign - Detergent - Toilet Paper - Blowfish Restaurant - "All You Can Eat" - On Sale Banner - AC Condenser - Blowfish - Calico Cat - Black Cat - Ice Cream Freezer - Sale Cart - Florist - Florist Sign - Shoe Store - Shoe Store Sign - Fruit & Veg Shop - Gas Meter - Turkey - Banana Bunch - Price Tag - Price Tag - Display Menu - Ramen Sign - Birthday Cake - Chocolate Cake - Cheesecake - Shortcake - Wedding Cake - Cafe - Tulip Bouquet - Flower Bouquet - Hydrangea - Flower Pot - Flower Pot - Flower Pot - Flower Basket - Flower Basket - Pear - Big Pear - Melon - Monster Melon - Monster Apple - Noticeboard - Fruit Shop - Cash Register - Shoe Box - Magazine - Lucky Cat - Pineapple - Peach - Giant Peach - Tissues (5 pack) - Gardening Fence - Florist Fence - Construction Guy - Chief Driller - Part-Timer - Flower Girl - Store Owner - Bucket - Short Fence - Momma - Shopper - Chubby Housewife - Chinese Bowl - Lamp Post - Open/Closed Sign - Display Stand - Strawberry Pack - Blowfish Ad Balloon - Half Watermelon - Watermelon - Peso - Food Delivery Box - Wok - Dragon Statue - Vegetable Carton - Fruit Carton - Fried Rice - Ramen - Roast Pork - Daruma - Clapper Board - Calligraphy - 8th Step - Quail River Sign - Carp - Salmon - Tire - Ceiling Light - Momotaro - Ostrich Chick - Big Crown - Honey - Fisherman - 4b. S. Pigeon St. - Wooden Bench - Briefcase - Scarecrow - Traffic Dummy - 6th Step - Warning Sign - Daikon Radish - Yellow Squash - Matsuri Tent - Matsuri Table - Wheelbarrow - Hoe - Shovel - Axe - Handrail - Pickaxe - Wooden Box - Accident Notice - Policeman - Mikoshi - Ship's Wheel - Lantern - Sweets Container - Toaster - Roller Boy - Farmer - Strong Man - Paper Fan Man - Matsuri Boy - Matsuri Lover - Matsuri Girl - Busker - Fortune-teller - Big Turnip - Cherry Tree - Tree Stump - Takoyaki Sign - Toy Dispenser - Photo Booth - "Don't Rush Out" - Carrot - Flea Market - Hard Hat - Baseball Cap - Straw Hat - Telephone Pole Ad - Paper Bag - Laundry Hanger - Fire Extinguisher - Copy Machine - Pachinko Machine - Bowling Pin - Palmistry Table - Palmistry Sign - Cushioned Chair - Mortar - Pestle - Dove Statue - Old Comics - Old Newspapers - Boy - Junior - Precious - Scooter - Girl - Telephone Pole - Pay Phone - Telephone Book - Megaphone - Biker Flag - Bus Stop - Businessman - Businessman - Fat Businessman - Utility Worker - Grandpa - Storekeeper - Great x2 Grandpa - Great x3 Grandpa - Grandma - DIY Dad - Bamboo Broom - Store Dustpan - Schoolgirl - Wooden Fence - Housewife - Snoozing Momma - Triangle Pylon - Fox Mask - Hyottoko Mask - Kendo Mask - Bamboo Sword - Punk - Big Guy - Nerdy Guy - Pretty Boy - Konishi Residence - Wada Residence - Bicycle - Tricycle - Russian Doll (S) - Royal Crown - Pizza - Food Delivery Bike - Burglar Mask - Briefs - Sidewalk Marker - Jumboman Mask - Organ - Scale - Weather Station - Red Oil Drum - Green Oil Drum - Blue Oil Drum - Bale of Rice - Tractor - Backpack - Plastic Greenhouse - Matsuri Stage - Small Tree - Farmhouse - Cinema Marquee - Garbage Truck - Carp Streamer - Magoi - Higoi - Kogoi - Fukinagashi - Plastic Bench - Globe Jungle Gym - See-saw - Jungle Gym - Slide - Telescope - Taiko Drum - Port-A-Potty - Cardboard Carton - Kintaro-Bear - Skater Boy - Election Posters - Traffic Mirror - Grand Opening - Swing - Traffic Signal - Pedestrian Signal - Tea House - Teahouse Banner - Food Sample - Umbrella Shop - Umbrella Shop Sign - Bear Cub Statue - Parasol - Curry Ad - Road Sign - Washing Machine - Gatepost - Shoe Cupboard - Stereo Shelf - Weathercock - Eagle - Hatchback - Compact - Van - Minivan - Monster Truck - Stop Sign - Speed Limit Sign - Phone Booth - Sliding Door - Guardrail  - Fancy Guardrail - Pedestrian Bridge - Bus Stop - Nurse - Vending Machine - Manneken Pis - Spirit - Garbage Dump - Wooden Fence - Mama-san - Jumbo Pylon - Gas Station - RF Radiation Sign - Gas Pump - Car Wash - Gas Station Sign - Blue Girl - Yellow Girl - Pink Girl - Girl Statue - Kerosene Stove - Oil Heater - Potbellied Stove - Bicycle - Shoe Display Stand - Shikao - Colombo - June - Kid's Umbrella - Umbrella - Polka Dot Umbrella - Jumbo Umbrella - Alpinist - Helicopter - 6b. Dove Lake - Barrel - X'mas Tree - 9th Step - 10th Step - Fishing Pole - Pier - Fishing Shack - Surfboard - Clay Stove - Picnic Basket - "No Swimming" Sign - Snapper - Bonito - Stingray - Vanilla Cone - Mixed Cone - Strawberry Cone - Boat Rental Sign - Round Table - Bear Carving - Drainboard - Winners' Podium - Cooler - TV Camera - Mystery Creature - Treasure Chest - Fishing Hole Sign - Shoji - Torn Shoji - Microphone Stand - Inner Tube Kid - Flag Buoy - Fish Statue - Sea Otter - Seal - Baby Turtle - Pool Ring - Pool Ring - Spotlight - Spotlight - Park Lamp Post - Big Watermelon - Fridge - Marny - Ichigo - Chubby Fisherman - Diver - Closed Box - Open Box - Crocodile - 7b. Sparrow Hill - Regular Tree - Big Tree - No Trespassing - Log - Mountain Guidepost - Hiking Course Map - Monument - Picture Stand - 8b. Baseball Field - Outfielder - Pitcher - Batter - Benchwarmer - Baseball Bat - Scoreboard - Base - Home Plate - Pitcher's Mound - Baseball Field Sign - Field Liner - Lawn Roller - Folding Chair - Champion's Belt - Barbell - Wrestler - Speakers - Jumping Bear Castle - Teepee - Camping Tent - Log Cabin - Bungalow - Scattered Clouds - 10b. Construction Site - Wrecking Ball - Radio Tower - Duct - Barrier - Prefab House - Construction Fence - Crane - Bulldozer - Steamroller - Driller - Steel Tower - Water Tank Sign - Fossil - Ammonite - Construction Entrance - Under Construction - Light Truck - Breakwater Block - Tiller - Flower Bed - Well Pump - Rubber Boot - Kid's Boot - Globe - Trophy - Snowman - Holy Cow - Man - Dog With Fleas - Siamese Cat - Clown - Balloon Man - Rocking Horse - Kebab - Ball Toss Basket - Butcher Sign - Candy Store Sign - Roast On Bone - Sunflower - Rabbit-Man - Bear-Man - Cow-Man - Toad - Hot Air Balloon - Balloon Shop Sign - Park Entrance - Forest Guidepost - Park Map - Door - Stilts - Green Balloon - Pink Balloon - Balloon Shop - Butcher Shop - Candy Store - Kiddie Car - Froggy Car - Coconut Crab - Trash Can - Penguin - Park Fence - Lollipop - Garden Plant (M) - Kid's Tricycle - Totem Pole - Tall Totem Poll - Panda Ride - Piggybackers - Tri-Piggybackers - Human Tower - Hour Hand - Minute Hand - Seagull Park Site - Portfolio - Sailboat - Firewood - Palm Tree - Lotus Leaf - Giant Lotus Leaf - Lotus - Striped Fish - Kotatsu - Beachball - Bear Cub - Polar Bear - Big Bear - Surfer - Judo Contest - Deer Head - Pond Guide - Camp Fire - Lighthouse - Chicken - Kickboard Boy - Watermelon Boy - Buoy - Great Grandpa - Old Salt - Abalone Diver - Electric Jellyfish - Sea Anemone - Algae Ball - The Best Mask - Double Punk - Cranky Guy - Golfer Guy - Golf Nut - Beach Umbrella - Cow Umbrella - Safe - Giant Watermelon - Ace - Bikini - Swimsuit - Sandpile - Chopper - Gangster Car - Boat - Swan Boat - Soccer Ball - Football - Mountain Man - Falling Rock - Merman - Top - 4th Step - Height Measure - School Chair - School Desk - Combine Harvester - Propane Tank - Kerosene Tank - Pickle Tub - Garden Lantern - Squared Shrubbery - Mailbox - Arcade Machine - Pressure Cooker - Soccer Goal - Calf - Cute Cow - White Sheep - Black Sheep - Burglar - Horizontal Bar - Hanging Bars - Principal's Statue - Kettle - Killer Move - Soccer Player - Podium - Convenience Store - "No Stealing Cows" - Pachinko Sign - Convenience Store - Parking Turntable - Sumo Wrestler - Pachinko Parlor - School Gate - School Sign - Pine Decoration - Crow - Lion Dance - Pogo Boy - RC Boy - Middle School - Clock Pedestal - Tall Business Man - Gym Storage - Gymnasium - Cow Vending Machine - Panda Balloon - Spirit of Joy - Garbage - Metal Bucket - Recycling Bin - Fence - Schoolgirl - Wall - Schoolboy - Pylon - Gymnastic Boy - Ball Race - Dangling Boy - Shy Guy - Apartment Building - Russian Doll - Nickel - Velvet - Dipp - Pizza Delivery Bike - Foomin - Opeo - Fujio - Principal - Red Ball - Giant Daruma - Invisible Man - Mermaid - Old Urchinville - Parking Lot Sign - Advertising Balloon - Truck - Bus - Wrestling Ring - Wrestling Match - Supermarket - Supermarket Sign - Stingray Building - Tree - Parking Garage - Neon Hotel Sign - Hotel Parking - Balance Beam - Parking Lot - Old Hotel Building - New Hotel Building - Connecting Bridge - Old Hotel Sign - New Hotel Sign - Masked Wrestler - Judo Wrestler - Bathhouse - Smokestack - Boiler Room - Bathhouse Curtain - White Wall - Japanese Car - Tall Business Man - Delivery Guy - Panda Sign - Summer Skinny - Mom - Playful Punk - TV Station - Monument - Lamp Post - Lion Statue - Lion Fountain - Lion Paw - Deluxe Fridge - Skinny - American Guy - Towel Guy - Drawbridge - Old Saltville - The Old Crab Mart - 5c. Seaslug Ranch - Cowshed - Dairy Cow - Ox - Giraffe - Windmill - Mushroom (L) - Silo - Log Fence - Huge Falling Rock - The Old Ranch - 6c. Sunshine Beach - Tuna - Sumo Bout - Kelp Factory - Smokestack - Ryokan - Kimono - Dried Kelp - Gull 'n Kelp - Sea Turtle - Old Suntan Beach - Boathouse - Market - Wholesale Market - Market Sign - Swordfish - Tall Lighthouse - Breakwater Block - Kimura Residence - Hara Residence - Majima Residence - Sailboat - Suspension Bridge - Small Fishing Boat - Fishing Boat - Trawler - Whale Mountain - Old Fishing Port - New Fishing Port - The Old Port - Demo Island - 8c. Circus - Elephant - Mammoth - Huge Tree - Gigantic Tree - Flat Car - Cage - Small Circus Tent - Circus Balloon - Circus Arch - Circus Sign - Train - Fight, Jumboman! - Circus Site - 9c. Mullet Bay - Warehouse - Anchor - Factory - Factory - Oil Tank - Petroleum Tank - Gas Tank - Crane Scaffold - Crane - Crane Scaffold - Crane - Cargo Ship - Sea Lion Isle - Cargo Container - Cargo Container - Cargo Container - 10c. Whirlpool Point - Hotel Sign - Goldfish Building - Shop Sign - Dentist Sign - Company Sign - Bank Sign - Men's Clothes Sign - Soccer Stadium - Stadium Lights - Stadium Balloon - Publisher Sign - Appliance Billboard - Car Ad - Sea Bass Building - Doi Residence - Towering Kokeshi - Bubble Island - Penguin Island - Scallop Island - Sunglass Bridge - Stadium Screen - Marlin Building - Bream Building - Coral Building - Satellite Dish - Elementary School - School Clocktower - Kuroshio Hills - Kuroshio Town - Old Middle School - 12c. Dolphin City - Tower - Eel Building - Sunfish Building - Drink Sign - Financing Ad - Netting Cage - Mogran - Mackerel Building - Guppy Building - Shark Building - Huge Bowling Pin - Bowling Alley - High School - Super Pylon - Marine Jumboman - Anglerfish Island - Coral Island - Railroad Bridge - 13c. Whale City - Ferris Wheel - Airport Terminal - Control Tower - Pilchard Building - Salmon Building - Airport - Stadium - Brine Building - Japanese Castle - Big Hot Air Balloon - Shrimp Building - Airplane - Oil Tanker - Splashy Island - Cuttlefish Island - Sea Cucumber Is. - Jellyfish Mountain - Toll Bridge - Rocket - Cruise Ship - Satellite - Space Center - Launch Pad - Storm Cloud - Oni Island - The Oni Rock - Thunder God - Rain - College - Giant Sea Turtle - Prop Plane - Submarine - Cloud - Tornado - Whirlpool - Rainbow - Top Shell Island - Anchor Island - Nagisa Island - Abalone Island - Cockle Island - Starfish Island - Tsunami Island - Flying Fish Island - Roe Island - Sperm Whale - Takeda Residence - Pigeon Town - Giant Squid - Giant Octopus - Gigantic Squid - Gigantic Octopus - Small Iceberg - Pointy Iceberg - Big Iceberg





####################################################################################################################
####################################################################################################################
# Some drafts



####3 Alarm clock

class obj_scene_ch4p9(page.obj_chapterpage):
    def prevpage(self):
        share.scenemanager.switchscene(obj_scene_ch4p8())
    def nextpage(self):
        share.scenemanager.switchscene(obj_scene_ch4p10())
    def setup(self):
        self.text=[\
                   'Maybe we can improve this situation at breakfast. ',\
                  'Draw a ',('coffee cup',share.colors.item),'. Then, draw an ',\
                  ('alarm clock',share.colors.item),'(draw around the panel). ',\
                   ]
        self.addpart( draw.obj_drawing('coffeecup',(200+50,450),legend='Coffee Cup',shadow=(200,200)) )
        self.addpart( draw.obj_drawing('alarmclockext',(940,450),legend='Alarm Clock',shadow=(200,200)) )
        self.addpart( draw.obj_image('alarmclockfill',(940,450),path='premade') )
        self.addpart( draw.obj_image('alarmclockcenter8am',(940,450),path='premade') )

    def endpage(self):
        super().endpage()
        # combine alarmclockext+alarmclockfill=alarmclock (no hour shown)
        image1=draw.obj_image('alarmclockext',(640,360))
        image2=draw.obj_image('alarmclockfill',(640,360),path='premade')
        dispgroup1=draw.obj_dispgroup((640,360))
        dispgroup1.addpart('part1',image1)
        dispgroup1.addpart('part2',image2)
        dispgroup1.snapshot((640,360,200,200),'alarmclock')
        # combine alarmclock+alarmclockcenter8am=alarmclock8am
        image1=draw.obj_image('alarmclock',(640,360))
        image2=draw.obj_image('alarmclockcenter8am',(640,360),path='premade')
        dispgroup1=draw.obj_dispgroup((640,360))
        dispgroup1.addpart('part1',image1)
        dispgroup1.addpart('part2',image2)
        dispgroup1.snapshot((640,360,200,200),'alarmclock8am')

####################################################################################################################


# old cleanup trash instead of fishing (for river spirit quest)


class obj_scene_choosefishing(page.obj_chapterpage):
    def prevpage(self):
        if share.datamanager.getword('hero_breakfast')=='drink':
            share.scenemanager.switchscene(obj_scene_breakfast_drinking())
        else:
            share.scenemanager.switchscene(obj_scene_breakfast_notdrinking())
    def nextpage(self):
        if share.datamanager.getword('hero_fishing')=='pickuptrash':
            share.scenemanager.switchscene(obj_scene_fishing_trashcleanup())
        else:
            share.scenemanager.switchscene(obj_scene_fishing_withtrash())
    def setup(self):
        self.text=[\
                '"',('{heroname}',share.colors.hero),\
                'decided what to do next". ',\
                   ]
        y1=400
        self.addpart( draw.obj_textbox('The hero decided to:',(180,y1)) )
        textchoice=draw.obj_textchoice('hero_fishing')
        textchoice.addchoice('1. go fishing','fish',(540,y1))
        textchoice.addchoice('2. Pick up the trash in the river','pickuptrash',(940,y1))
        self.addpart( textchoice )
        # self.addpart( draw.obj_imageplacer(self, 'fish','drink','guitar' ) )
        self.addpart( draw.obj_image('fish',(534,525),scale=0.21,rotate=0,fliph=False,flipv=False) )
        self.addpart( draw.obj_image('drink',(834,577),scale=0.21,rotate=-126,fliph=False,flipv=False) )
        self.addpart( draw.obj_image('drink',(945,591),scale=0.21,rotate=-60,fliph=False,flipv=False) )
        self.addpart( draw.obj_image('guitar',(1045,564),scale=0.21,rotate=-122,fliph=False,flipv=False) )
        self.addpart( draw.obj_image('drink',(935,495),scale=0.21,rotate=-242,fliph=False,flipv=False) )


        class obj_scene_fishing_withtrash(page.obj_chapterpage):
            def prevpage(self):
                share.scenemanager.switchscene(obj_scene_choosefishing())
            def nextpage(self):
                share.scenemanager.switchscene(obj_scene_traveltolair())
            def triggernextpage(self,controls):
                return (share.devmode and controls.enter and controls.enterc) or self.world.done
            def setup(self):
                self.text=[\
                            '"',('{heroname}',share.colors.hero),\
                             ' went to the river and caught a fish".',
                           ]
                self.world=world.obj_world_fishing(self)
                self.addpart(self.world)
                self.addpart( draw.obj_image('drink',(99,649),scale=0.32,rotate=124,fliph=False,flipv=False) )
                self.addpart( draw.obj_image('drink',(254,657),scale=0.32,rotate=244,fliph=False,flipv=False) )
                self.addpart( draw.obj_image('guitar',(457,675),scale=0.32,rotate=250,fliph=False,flipv=False) )
                self.addpart( draw.obj_image('coffeecup',(236,570),scale=0.32,rotate=146,fliph=False,flipv=False) )
                self.addpart( draw.obj_image('drink',(69,544),scale=0.32,rotate=210,fliph=False,flipv=False) )


class obj_scene_fishing_trashcleanup(page.obj_chapterpage):
    def prevpage(self):
        share.scenemanager.switchscene(obj_scene_choosefishing())
    def nextpage(self):
        share.scenemanager.switchscene(obj_scene_traveltolair())
    def setup(self):
        self.text=[\
                    '"',('{heroname}',share.colors.hero),\
                     ' went to the river and picked up all the trash. ',\
                      'The fish was quite ',\
                      ('pleased',share.colors.partner),' with that".',\
                   ]
        animation1=draw.obj_animation('fishmove1','fish',(640,360),imgscale=0.25)
        self.addpart( animation1 )
        animation2=draw.obj_animation('ch5_pickuptrash1','love',(640,360),record=False,sync=animation1)
        animation2.addimage('empty',path='premade')
        self.addpart( animation2 )


####################################################################################################################


# draw elements for mini game fight with helicopters
class obj_scene_ch3p9(page.obj_chapterpage):
    def prevpage(self):
        share.scenemanager.switchscene(obj_scene_ch3p8())
    def nextpage(self):
        share.scenemanager.switchscene(obj_scene_ch3p10())
    def setup(self):
        self.text=[\
       This is going to be epic, said the book of things.
       Draw an ',('helicopter',share.colors.item),'around the
                 ('hero',share.colors.hero),'\' s head and a
                 ('cloud',share.colors.item),\
       for a battle in the skies.
                   ]

        self.addpart( draw.obj_drawing('helicopter',(400,450),legend='Helicopter (facing right)',shadow=(300,200)) )
        self.addpart( draw.obj_image('herohead',(500,450),scale=0.5) )
        self.addpart( draw.obj_drawing('cloud',(1000,450),legend='Cloud',shadow=(200,200)) )
    def endpage(self):
        super().endpage()
        # save heropter =hero+helicopter
        dispgroup1=draw.obj_dispgroup((640,360))# create dispgroup
        dispgroup1.addpart('part1',draw.obj_image('helicopter',(400,450)) )
        dispgroup1.addpart('part2',draw.obj_image('herohead',(500,450),scale=0.5) )
        dispgroup1.snapshot((400,450,300,200),'heropter')
        # save villainpter=villain+helicopter
        dispgroup1=draw.obj_dispgroup((640,360))# create dispgroup
        dispgroup1.addpart('part1',draw.obj_image('helicopter',(400,450)) )
        dispgroup1.addpart('part2',draw.obj_image('villainhead',(500,450),scale=0.5) )
        dispgroup1.snapshot((400,450,300,200),'villainpter')

# Mini Game: fight in the air (like flapping)
class obj_world_airfight(obj_world):
    def setup(self):
        self.done=False# end of minigame
        self.goal=False# minigame goal reached
        # boundaries
        self.ymin=0+100
        self.ymax=720-60
        # sky background
        # self.sky=obj_grandactor(self,(640,360))
        # self.sky.addpart('img', draw.obj_image('cloud',(640,360),scale=0.5) )
        # hero (some dynamics for flapping)
        self.hero=obj_grandactor(self,(250,620))
        self.hero.addpart('img', draw.obj_image('heropter',(250,620),scale=0.3) )
        self.hero.addpart('imgr', draw.obj_image('heropter',(250,620),scale=0.3,rotate=15) )
        self.hero.dict['img'].show=True
        self.hero.dict['imgr'].show=False
        self.herodt=1# hero time increment
        self.herofy=0# hero force
        self.herov=0# hero velocity
        self.herog=1# gravity rate
        self.herod=0.1# dissipation rate
        self.heroj=20# jump rate
        self.hero.rx=50# hitbox
        self.hero.ry=30
        self.hero.r=30
        # villain (goes up and down in sin)
        self.villain=obj_grandactor(self,(1280-150,360))
        self.villain.addpart('img', draw.obj_image('villainpter',(1280-150,360),scale=0.5,fliph=True) )
        self.villainp=1# sin period
        self.villaina=0# time increment (angle )
        self.villaintimert1=160# first shot timer
        self.villaintimert2=40#80# consecutive shots
        self.villaintimershoot=tool.obj_timer(self.villaintimert1,cycle=True)#timer between shots
        self.villaintimershoot.start()
        # cannonballs
        self.cannonballs=[]# empty list
        # health bar
        self.maxherohealth=5# starting hero health
        self.herohealth=self.maxherohealth# updated one
        self.healthbar=obj_grandactor(self,(200,680))
        for i in range(self.maxherohealth):
            # self.healthbar.addpart('heart_'+str(i), draw.obj_image('love',(50+i*75,720-25),scale=0.125) )
            self.healthbar.addpart('heart_'+str(i), draw.obj_image('love',(50,720-50-i*75),scale=0.125) )
        # timer to done
        self.timerend=tool.obj_timer(80)# goal to done
    def makecannonball(self,x,y):
        cannonball=obj_grandactor(self,(x,y))
        cannonball.addpart('img', draw.obj_image('cannonball',(x,y),scale=0.5,path='premade') )
        cannonball.rx=15# hitbox
        cannonball.ry=15
        cannonball.r=15
        cannonball.speed=5#tool.randint(2,8)
        self.cannonballs.append(cannonball)
    def killcannonball(self,cannonball):
        self.cannonballs.remove(cannonball)
        cannonball.kill()
    def update(self,controls):
        super().update(controls)
        if not self.goal:
            # goal unreached state
            # hero dynamics
            self.herofy=0# force
            self.herofy += self.herog# gravity
            if controls.w and controls.wc:# flap
                self.herofy -= self.heroj
                self.herov=0# reset velocity
            # hero dynamics
            self.herov += self.herodt*(self.herofy-self.herod*self.herov)# dtv=g+flap-dv**2
            self.hero.movey(self.herodt*self.herov)# dty=v
            if self.herov<-5:
                self.hero.dict['img'].show=False
                self.hero.dict['imgr'].show=True
            else:
                self.hero.dict['img'].show=True
                self.hero.dict['imgr'].show=False
            # boundaries
            if self.hero.y>self.ymax:
                self.hero.movetoy(self.ymax)
                self.herov *= -0.5# loss from bounce
            elif self.hero.y<self.ymin:
                self.hero.movetoy(self.ymin)
                self.herov *= -0.5# losse from bounce
            # villain
            self.villain.movetoy( (1+tool.sin(self.villaina/self.villainp))/2*(self.ymax-self.ymin)+self.ymin )
            self.villaina += 1
            if self.villaina>360: self.villaina=0
            #villainshoot
            self.villaintimershoot.update()
            if self.villaintimershoot.ring:
                # faster consecutive shots after first one
                self.villaintimershoot.amount=self.villaintimert2
                self.makecannonball(self.villain.x-100,self.villain.y)
            #cannonballs
            if self.cannonballs:
                for i in self.cannonballs:
                    i.movex(-i.speed)
                    if i.x<-50: self.killcannonball(i)# disappears on left edge of screen
                    if tool.checkrectcollide(i,self.hero):# cannonball hits hero
                        self.killcannonball(i)
                        # hero looses health
                        self.herohealth -= 1
                        if self.herohealth>-1:
                            self.healthbar.dict['heart_'+str(self.herohealth)].show=False
        else:
            # goal reached state
            self.timerend.update()
            if self.timerend.ring:
                self.done=True# end of minigame




####################################################################################################################


# OLD MINI GAME: travel to lair following a pattern
class obj_world_traveltolairOLD(obj_world):
    def setup(self):
        self.done=False# end of minigame
        self.goal=False# minigame goal reached
        self.staticactor=obj_grandactor(self,(640,360))# background
        self.pathactor=obj_grandactor(self,(640,360))# below move actor
        self.moveactor=obj_grandactor(self,(180,400))
        self.text_undone=obj_grandactor(self,(640,360))# text always in front
        self.text_done=obj_grandactor(self,(640,360))
        # static
        self.staticactor.addpart( 'img1', draw.obj_image('house',(100,340),scale=0.5) )
        self.staticactor.addpart( 'img2', draw.obj_image('tower',(1280-100,340),scale=0.5) )
        self.staticactor.addpart( 'text1', draw.obj_textbox('home',(100,470)) )
        self.staticactor.addpart( 'text2', draw.obj_textbox('evil lair',(1280-100,470)) )
        self.staticactor.addpart( 'img3', draw.obj_image('tree',(230,570),scale=0.5) )
        self.staticactor.addpart( 'img4', draw.obj_image('tree',(100,720-100),scale=0.5) )
        self.staticactor.addpart( 'img5', draw.obj_image('tree',(70,190),scale=0.35) )
        self.staticactor.addpart( 'img6', draw.obj_image('mountain',(1280-100,580),scale=0.4) )
        self.staticactor.addpart( 'img7', draw.obj_image('mountain',(990,720-100),scale=0.5) )
        self.staticactor.addpart( 'img8', draw.obj_image('mountain',(1160,170),scale=0.35) )
        self.staticactor.addpart( 'img9', draw.obj_image('mountain',(1030,120),scale=0.3) )
        # hero
        self.moveactor.addpart( 'img1', draw.obj_image('stickaura',(180,400),scale=0.25,path='premade') )
        self.moveactor.addpart( 'img2', draw.obj_image('herobase',(180,400),scale=0.25) )
        # text
        self.text_undone.addpart( 'text1', draw.obj_textbox('Move with [W][A][S][D]',(640,680),color=share.colors.instructions) )
        self.text_done.addpart( 'text1', draw.obj_textbox('We made it!',(640,680)) )
        self.text_undone.show=True
        self.text_done.show=False
        # timer
        self.timerend=tool.obj_timer(80)# goal to done
        # random path
        # whichpath=tool.randint(1,2)
        whichpath=2
        if whichpath==1:
            self.pathactor.addpart( 'img1', draw.obj_image('lair_path1',(640,400),path='premade') )
            self.pathmoves=['r','u','r','d','l','d','r','u','r','d','r','u','r']
            self.pathpos=[(240,400),(412,400),(424,219),(520,217),\
            (520,526),(420,535),(417,608),(648,603),\
            (627,209),(755,207),(742,499),(904,500),(897,383),(1037,383)]
        elif whichpath==2:
            # self.pathactor.addpart( 'img1', draw.obj_image('lair_path2',(640,400),path='premade') )
            self.pathmoves=['r','d','r','u','r','d','r']
            self.pathpos=[(242,407),(343,408),(349,637),(635,626),(637,142),(922,149),(919,480),(1031,463)]
        # initialize
        self.pathi=0
        self.moveactor.movetoxy(self.pathpos[self.pathi])
    def update(self,controls):
        super().update(controls)
        if not self.goal:
            # goal unreached state
            hasmoved=False
            if controls.w and controls.wc and self.pathmoves[self.pathi]=='u':
                self.pathi +=1
                hasmoved=True
            if controls.s and controls.sc and self.pathmoves[self.pathi]=='d':
                self.pathi +=1
                hasmoved=True
            if controls.a and controls.ac and self.pathmoves[self.pathi]=='l':
                self.pathi +=1
                hasmoved=True
            if controls.d and controls.dc and self.pathmoves[self.pathi]=='r':
                self.pathi +=1
                hasmoved=True
            if hasmoved and self.pathi<len(self.pathpos):
                self.moveactor.movetoxy(self.pathpos[self.pathi])
                if self.pathi >= len(self.pathpos)-1:
                    self.goal=True
                    self.timerend.start()
                    self.text_undone.show=False
                    self.text_done.show=True
        else:
            # goal reached state
            self.timerend.update()
            if self.timerend.ring:
                self.done=True# end of minigame











#
